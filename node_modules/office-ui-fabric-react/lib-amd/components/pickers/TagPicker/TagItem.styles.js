define(["require", "exports", "../../../Styling"], function (require, exports, Styling_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var GlobalClassNames = {
        root: 'ms-TagItem',
        text: 'ms-TagItem-text',
        close: 'ms-TagItem-close',
        isSelected: 'is-selected'
    };
    var TAG_HEIGHT = 26;
    function getStyles(props) {
        var className = props.className, theme = props.theme, selected = props.selected;
        var palette = theme.palette;
        var classNames = Styling_1.getGlobalClassNames(GlobalClassNames, theme);
        return {
            root: [
                classNames.root,
                Styling_1.getFocusStyle(theme),
                {
                    boxSizing: 'content-box',
                    flexShrink: '1',
                    margin: 2,
                    height: TAG_HEIGHT,
                    lineHeight: TAG_HEIGHT,
                    cursor: 'default',
                    userSelect: 'none',
                    display: 'flex',
                    flexWrap: 'nowrap',
                    maxWidth: 300,
                    background: !selected ? palette.neutralLighter : palette.neutralQuaternary,
                    selectors: (_a = {
                            ':hover': {
                                background: !selected ? palette.neutralLight : palette.neutralQuaternaryAlt
                            }
                        },
                        _a[Styling_1.HighContrastSelector] = {
                            border: "1px solid " + (!selected ? 'WindowText' : 'WindowFrame')
                        },
                        _a)
                },
                selected && [classNames.isSelected],
                className
            ],
            text: [
                classNames.text,
                {
                    overflow: 'hidden',
                    textOverflow: 'ellipsis',
                    whiteSpace: 'nowrap',
                    minWidth: 30,
                    margin: '0 8px'
                }
            ],
            close: [
                classNames.close,
                {
                    cursor: 'pointer',
                    color: palette.neutralSecondary,
                    fontSize: Styling_1.FontSizes.small,
                    display: 'inline-block',
                    textAlign: 'center',
                    verticalAlign: 'top',
                    width: 30,
                    height: '100%',
                    flexShrink: 0
                }
            ]
        };
        var _a;
    }
    exports.getStyles = getStyles;
});
//# sourceMappingURL=TagItem.styles.js.map