'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var _enzyme = require('enzyme');

var _pageButton = require('../src/page-button');

var _pageButton2 = _interopRequireDefault(_pageButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('PageButton', function () {
  var wrapper = void 0;
  var onPageChangeCallback = _sinon2.default.stub();
  var props = {
    onPageChange: onPageChangeCallback,
    page: 2
  };

  describe('default PageButton', function () {
    beforeEach(function () {
      wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_pageButton2.default, _extends({}, props, { active: true, disabled: false })));
    });

    it('should rendering PageButton correctly', function () {
      expect(wrapper.find('a.page-link').length).toBe(1);
      expect(wrapper.text()).toEqual('' + props.page);
    });

    describe('when clicking', function () {
      var preventDefault = void 0;
      beforeEach(function () {
        preventDefault = _sinon2.default.stub();
        wrapper.find('a.page-link').simulate('click', { preventDefault: preventDefault });
      });

      afterEach(function () {
        onPageChangeCallback.reset();
      });

      it('should calling e.preventDefault', function () {
        expect(preventDefault.calledOnce).toBeTruthy();
      });

      it('should calling onPageChange prop', function () {
        expect(onPageChangeCallback.calledOnce).toBeTruthy();
      });

      it('should calling onPageChange prop with correct argument', function () {
        expect(onPageChangeCallback.calledWith(props.page)).toBeTruthy();
      });
    });
  });

  describe('when active prop is true', function () {
    beforeEach(function () {
      wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_pageButton2.default, _extends({}, props, { active: true, disabled: false })));
    });

    it('should render PageButton correctly', function () {
      expect(wrapper.length).toBe(1);
      expect(wrapper.hasClass('active')).toBeTruthy();
    });
  });

  describe('when active prop is false', function () {
    beforeEach(function () {
      wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_pageButton2.default, _extends({}, props, { active: false, disabled: false })));
    });

    it('should render PageButton correctly', function () {
      expect(wrapper.length).toBe(1);
      expect(wrapper.hasClass('active')).toBeFalsy();
    });
  });

  describe('when disabled prop is true', function () {
    beforeEach(function () {
      wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_pageButton2.default, _extends({}, props, { active: true, disabled: true })));
    });

    it('should render PageButton correctly', function () {
      expect(wrapper.length).toBe(1);
      expect(wrapper.hasClass('disabled')).toBeTruthy();
    });
  });

  describe('when disabled prop is false', function () {
    beforeEach(function () {
      wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_pageButton2.default, _extends({}, props, { active: true, disabled: false })));
    });

    it('should render PageButton correctly', function () {
      expect(wrapper.length).toBe(1);
      expect(wrapper.hasClass('disabled')).toBeFalsy();
    });
  });

  describe('when title prop is defined', function () {
    var title = 'aTitle';
    beforeEach(function () {
      wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_pageButton2.default, _extends({}, props, { active: true, disabled: false, title: title })));
    });

    it('should render PageButton correctly', function () {
      expect(wrapper.length).toBe(1);
      expect(wrapper.prop('title')).toEqual(title);
    });
  });
});