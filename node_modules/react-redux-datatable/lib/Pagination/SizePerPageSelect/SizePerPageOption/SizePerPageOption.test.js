'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _chai = require('chai');

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var _enzyme = require('enzyme');

var _SizePerPageOption = require('./SizePerPageOption');

var _SizePerPageOption2 = _interopRequireDefault(_SizePerPageOption);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('<SizePerPageOption>', function () {
  var wrapper = void 0;
  var text = 'page1';
  var page = 1;
  var onSizePerPageChange = _sinon2.default.stub();

  beforeEach(function () {
    onSizePerPageChange.reset();
    var props = { text: text, page: page, onSizePerPageChange: onSizePerPageChange };
    wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_SizePerPageOption2.default, props));
  });

  it('should render SizePerPageOption correctly', function () {
    (0, _chai.expect)(wrapper.length).to.equal(1);
    (0, _chai.expect)(wrapper.find('li.dropdown-item').length).to.equal(1);
    (0, _chai.expect)(wrapper.find('[data-page=' + page + ']').length).to.equal(1);
    (0, _chai.expect)(wrapper.text()).to.equal(text);
  });

  describe('when MouseDown event happens', function () {
    var preventDefault = _sinon2.default.stub();
    beforeEach(function () {
      wrapper.find('button').simulate('mousedown', { preventDefault: preventDefault });
    });

    it('should calling props.onSizePerPageChange correctly', function () {
      (0, _chai.expect)(preventDefault.calledOnce).to.equal(true);
      (0, _chai.expect)(onSizePerPageChange.calledOnce).to.equal(true);
      (0, _chai.expect)(onSizePerPageChange.calledWith(page)).to.equal(true);
    });
  });
});