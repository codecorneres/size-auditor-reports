'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _chai = require('chai');

var _Pagination = require('./Pagination');

var _Pagination2 = _interopRequireDefault(_Pagination);

var _PaginationContext = require('./PaginationContext');

var _PaginationContext2 = _interopRequireDefault(_PaginationContext);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var data = [];
for (var i = 0; i < 100; i += 1) {
  data.push({
    id: i,
    name: 'itme name ' + i
  });
}

describe('PaginationContext', function () {
  var wrapper = void 0;
  var PaginationContext = void 0;

  var columns = [{
    dataField: 'id',
    text: 'ID'
  }, {
    dataField: 'name',
    text: 'Name'
  }];

  var defaultPaginationOptions = {
    options: {
      onSizePerPageChange: function onSizePerPageChange() {},
      page: 1,
      sizePerPage: 10,
      totalSize: data.length
    }
  };

  var mockBase = function mockBase(props) {
    return _react2.default.createElement('div', props);
  };

  var handleRemotePaginationChange = function handleRemotePaginationChange() {};

  function shallowContext() {
    var customPagination = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultPaginationOptions;
    var enableRemote = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

    PaginationContext = (0, _PaginationContext2.default)(enableRemote, handleRemotePaginationChange);

    return _react2.default.createElement(
      PaginationContext.Provider,
      { pagination: customPagination, columns: columns, data: data },
      _react2.default.createElement(
        PaginationContext.Consumer,
        null,
        function (paginationProps) {
          return mockBase(paginationProps);
        }
      )
    );
  }

  describe('default render', function () {
    beforeEach(function () {
      wrapper = (0, _enzyme.shallow)(shallowContext());
      wrapper.render();
    });

    it('should have correct Provider property after calling createPaginationContext', function () {
      (0, _chai.expect)(PaginationContext.Provider).to.be.defined;
    });

    it('should have correct Consumer property after calling createPaginationContext', function () {
      (0, _chai.expect)(PaginationContext.Consumer).to.be.defined;
    });

    it('should render Pagination component correctly', function () {
      (0, _chai.expect)(wrapper.length).to.equal(1);
      var pagination = wrapper.find(_Pagination2.default);
      (0, _chai.expect)(pagination).to.have.length(1);
    });
  });
});